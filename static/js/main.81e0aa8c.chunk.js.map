{"version":3,"sources":["AirQualityInfo.js","qrcode.js","displayControllerSettings.js","displayControllerDetails.js","DisplayControllerProperties.js","expansionPanelContent.js","ControllerExpansionPanels.js","main.js","nextHoliday.js","displayZoneList.js","Layout.js","ParentComponent.js","app.js","index.js"],"names":["AirQualityInfo","props","displayAirQualityData","state","airQualityRijeka","measurements","map","parameter","index","style","display","padding","toUpperCase","value","unit","fetch","then","response","json","responseJson","setState","results","catch","console","log","this","React","Component","QRCode","onClickGenerateQRCode","qrLink","controller","name","qrUrl","fontSize","onClick","Typography","src","alt","displayControllerSettings","item","settingsRows","settings","row","TableRow","key","TableCell","Id","settingName","settingValue","Table","size","colSpan","displayControllerDetails","id","address","object","subObject","zone","subZone","ipAddress","ipPort","String","LocalCommandHeatingCooling","LocalCommandPanelBlocked","DisplayControllerProperties","changeCurrentTempFromLocalStorage","event","CurrentTempFromLocalStorage","JSON","parse","localStorage","getItem","target","Number","setItem","stringify","properties","Value","ExpansionPanelContent","handleClickDetailsOrSetting","displayDetailsOrSetting","Paper","width","overflowX","float","paddingRight","minWidth","Button","variant","color","ControllerExpansionPanels","ExpansionPanel","expanded","expandedRow","ExpansionPanelSummary","backgroundColor","handleRowClick","expandIcon","aria-controls","flexGrow","Grid","container","xs","spacing","ExpansionPanelDetails","minHeight","Main","allItemRows","rooms_status","controllers","forEach","perItemRows","renderItem","concat","paddingBottom","NextHoliday","getNextHoliday","today","Date","thisYearHolidays","holidayListJsonThisYear","i","length","type","date","datetime","year","month","day","nextHoliday","lastHoliday","lastHolidayDate","nextYearHolidays","holidayListJsonNextYear","apiKey","getFullYear","nextYear","holidays","iso","displayZoneList","zoneList","ListItem","alignItems","button","handleRowLinkClick","background","ListItemText","primary","unshift","ListItemIcon","List","useStyles","makeStyles","theme","root","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","content","contentShift","Layout","classes","useTheme","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","noWrap","Drawer","anchor","paper","Divider","paragraph","ParentComponent","rowId","window","scrollTo","document","getElementById","scrollIntoView","scrolledY","scrollY","top","left","behavior","setTimeout","currentTempByRoomIdLocal","element","controllerId","controllerTemp","localTempUpdated","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.81e0aa8c.chunk.js","sourcesContent":["import React from 'react'\n\n\nclass AirQualityInfo extends React.Component {\n\n    constructor(props){\n        super(props)       \n            \n        this.state = {\n          }\n    }  \n    \n    componentDidMount() {\n        var country=\"HR\"\n        var location=\"HR0005A\"\n        \n        var openAqURL=\"https://api.openaq.org/v1/latest?&country=\"+country+\"&location=\"+location\n        //console.log(openAqURL)\n\n\n        fetch(openAqURL)\n        .then(response => response.json())\n        .then((responseJson) => {\n            \n          this.setState({ airQualityRijeka: responseJson.results[0] })         \n          this.displayAirQualityData()\n        })\n        .catch(console.log)  \n                \n      }\n\n\n    displayAirQualityData=()=>\n    { \n\n        const airQualityRijekaParameters =this.state.airQualityRijeka.measurements.map((parameter,index) => {\n           \n            return ( \n\n                <p style={{display : 'inline-block',padding:\"0 1em\" }} >\n                    {parameter.parameter.toUpperCase()} : {parameter.value}{parameter.unit}\n                </p>              \n        )})\n\n        return (airQualityRijekaParameters)\n    } \n  \n    render(){\n    \n        return(\n                \n    <div >\n    Air quality in Rijeka, latest measurements:{<br/>} {this.state.airQualityRijeka && this.displayAirQualityData()}\n         \n         \n    </div>\n    )\n    }\n  }  \n\n\n  export default AirQualityInfo","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n\nclass QRCode extends React.Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {            \n            qrUrl: \"\"         \n          }    \n   \n    }\n\n    onClickGenerateQRCode=()=>\n    {       \n        let qrLink= \"https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=\"+this.props.controller.name\n        this.setState({\n            qrUrl:qrLink\n        })        \n    }    \n\n        \n    render() {        \n\n    return (\n        <div>\n            <button style={{fontSize: \"15px\",padding: \"5px \"}} onClick={this.onClickGenerateQRCode}><Typography>GENERATE QR CODE</Typography></button><br></br>\n            {this.state.qrUrl!==\"\"?<img src={this.state.qrUrl} alt={\"qr kod replacement\"}></img>:\"\"}\n        </div>\n\n    )\n        \n  }\n}\n\n\nexport default QRCode","import React from 'react'\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst displayControllerSettings= item =>\n{         \n        \n       \n        const settingsRows =item.settings.map((row,index) => {\n           \n            return (\n             \n                \n                <TableRow key={index}>                \n                    <TableCell>{row.Id}</TableCell>\n                    <TableCell>{row.settingName}</TableCell>\n                    <TableCell>{row.settingValue}</TableCell>\n                </TableRow>\n             \n            \n        )})\n        \n        return (\n\n                <Table size=\"small\">\n                    <TableRow>\n                        <TableCell colSpan={3}><strong>Settings:</strong></TableCell>\n                    </TableRow> \n                     {settingsRows}\n                </Table> \n                 \n    )\n}\n\nexport default displayControllerSettings","import React from 'react'\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst displayControllerDetails= item =>\n{\n    return(\n    <Table size=\"small\">\n        <TableRow>\n            <TableCell colSpan={3}><strong>Details:</strong></TableCell>\n        </TableRow>\n        <TableRow>\n            <TableCell>id :</TableCell>\n            <TableCell>{item.id}</TableCell>\n        </TableRow>    \n        \n        <TableRow>\n            <TableCell>name:</TableCell>\n            <TableCell>{item.name}</TableCell>\n        </TableRow>         \n        <TableRow>\n            <TableCell>address:</TableCell>\n            <TableCell>{item.address}</TableCell>\n        </TableRow>         \n        <TableRow>\n            <TableCell>object:</TableCell>\n            <TableCell>{item.object}</TableCell>\n        </TableRow>         \n        <TableRow>\n            <TableCell>subObject:</TableCell>\n            <TableCell>{item.subObject}</TableCell>\n        </TableRow>         \n        <TableRow>\n            <TableCell>zone:</TableCell>\n            <TableCell>{item.zone}</TableCell>\n        </TableRow>         \n        <TableRow>\n            <TableCell>subZone:</TableCell>\n            <TableCell>{item.subZone}</TableCell>\n        </TableRow>\n        <TableRow>\n            <TableCell>ipAddress:</TableCell>\n            <TableCell>{item.ipAddress}</TableCell>\n        </TableRow>         \n        <TableRow>\n            <TableCell>ipPort:</TableCell>\n            <TableCell>{item.ipPort}</TableCell>\n        </TableRow>\n        <TableRow>\n            <TableCell>LocalCommandHeatingCooling:</TableCell>\n            <TableCell>{String(item.LocalCommandHeatingCooling)}</TableCell>\n        </TableRow>         \n        <TableRow>\n            <TableCell>LocalCommandPanelBlocked:</TableCell>\n            <TableCell>{String(item.LocalCommandPanelBlocked)}</TableCell>\n        </TableRow> \n    </Table>   \n    )\n}\n\n\nexport default displayControllerDetails","import React from 'react'\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\n\n\n\n\nclass DisplayControllerProperties extends React.Component {\n\n    constructor(props){\n        super(props)\n\n\n        this.state = {       \n            CurrentTempFromLocalStorage:JSON.parse(localStorage.getItem(\"currentTemperatureLocal\"))\n            \n          }    \n   \n    }\n\n    changeCurrentTempFromLocalStorage=event=>\n    \n    {        \n        let CurrentTempFromLocalStorage=JSON.parse(localStorage.getItem(\"currentTemperatureLocal\"))\n           \n        if (event.target.value==='+')\n        {\n            CurrentTempFromLocalStorage[this.props.item.id]=String(Number(CurrentTempFromLocalStorage[this.props.item.id])+1)\n        }            \n        if (event.target.value==='-')\n        {\n            CurrentTempFromLocalStorage[this.props.item.id]=String(Number(CurrentTempFromLocalStorage[this.props.item.id])-1)\n        }\n        localStorage.setItem(\"currentTemperatureLocal\",JSON.stringify(CurrentTempFromLocalStorage))\n       \n        this.setState ({\n            CurrentTempFromLocalStorage:CurrentTempFromLocalStorage\n        })\n        \n    \n    }\n\n\n    render(){\n    \n        return(\n                \n    <Table size=\"small\" >\n        <TableRow >\n            <TableCell colSpan={3}><strong>Properties:</strong></TableCell>\n        </TableRow>\n        <TableRow>\n            <TableCell>Set temperature:</TableCell>\n            <TableCell>{this.state.CurrentTempFromLocalStorage[this.props.item.id]}\n                \n            <button style={{fontSize: \"22px\"}} value=\"+\" onClick={this.changeCurrentTempFromLocalStorage}>+</button>\n            <button style={{fontSize: \"22px\",padding: \"0px 12px\"}} value=\"-\" onClick={this.changeCurrentTempFromLocalStorage}>-</button>\n                         \n            \n            </TableCell>\n        </TableRow>\n        <TableRow>\n            <TableCell>Current temperature:</TableCell>\n            <TableCell>{this.props.item.properties[8].Value}</TableCell>\n        </TableRow>          \n        <TableRow>\n            <TableCell>{this.props.item.properties[24].Value===\"1\"?<p>DND</p>:<p></p>}</TableCell>            \n        </TableRow>\n        <TableRow>\n            <TableCell>{this.props.item.properties[38].Value===\"1\"?<p>Occupied</p>:<p></p>} </TableCell>            \n        </TableRow>        \n              \n\n    </Table>    \n    )\n    }\n}\n\n\nexport default DisplayControllerProperties","import React from 'react'\r\nimport QRCode from './qrcode.js'\r\nimport displayControllerSettings from './displayControllerSettings.js'\r\nimport displayControllerDetails from './displayControllerDetails.js'\r\nimport DisplayControllerProperties from './DisplayControllerProperties.js'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nclass ExpansionPanelContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        \r\n        this.state = {\r\n            displayDetailsOrSetting: 0,\r\n  \r\n        };\r\n    }\r\n\r\n    handleClickDetailsOrSetting=()=> {            \r\n        \r\n        if (this.state.displayDetailsOrSetting===0)\r\n        {\r\n            this.setState({displayDetailsOrSetting:1})            \r\n        }\r\n        else\r\n        {\r\n            this.setState({displayDetailsOrSetting:0})\r\n        }\r\n        \r\n    }  \r\n  \r\n  \r\n  \r\n   render(){\r\n  \r\n   \r\n  \r\n    return (\r\n  \r\n        \r\n        <Paper style={{ width: '100%', overflowX: 'auto',}} >        \r\n                     \r\n            <div  style={{ float: \"left\",paddingRight: \"50px\", minWidth:\"400px\"}} >\r\n             \r\n                {this.state.displayDetailsOrSetting===1?displayControllerSettings(this.props.controller):displayControllerDetails(this.props.controller)} \r\n             \r\n            </div>\r\n            <div  style={{ float: \"left\",paddingRight: \"50px\",minWidth:\"400px\"}} >\r\n                {this.state.displayDetailsOrSetting===1?<QRCode controller={this.props.controller}/>:<DisplayControllerProperties item={this.props.controller}/>} \r\n            </div>\r\n            <div style={{float: \"left\"}} >\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickDetailsOrSetting}>{this.state.displayDetailsOrSetting===0?\"Settings  &  QrCode\":\"Details & Properties\"}</Button>\r\n            </div>\r\n\r\n        </Paper>     \r\n            \r\n            \r\n          \r\n        \r\n        \r\n      \r\n    );\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  export default ExpansionPanelContent","import React from 'react';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpansionPanelContent from './expansionPanelContent'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nclass ControllerExpansionPanels extends React.Component {\r\n  constructor(props) {\r\n      super(props);     \r\n      \r\n      this.state = {\r\n      };\r\n  }\r\n\r\n render(){ \r\n\r\n  return (\r\n\r\n      \r\n      <ExpansionPanel     id={\"row-\"+this.props.controller.id} expanded={this.props.expandedRow === this.props.controller.id} >\r\n\r\n        <ExpansionPanelSummary style={{backgroundColor: \"lightblue\"}} onClick={()=>this.props.handleRowClick(this.props.controller.id)}\r\n          expandIcon={<ExpandMoreIcon/> }\r\n          aria-controls=\"panel1bh-content\"\r\n                >\r\n          <div style={{flexGrow: \"1\"}}>            \r\n            <Grid container item xs={12} spacing={3}>\r\n              <Grid item xs={4}>           \r\n                  Zone {this.props.controller.zone}\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                  {this.props.controller.name}\r\n              </Grid>\r\n              <Grid item xs={4}>           \r\n                  Address {this.props.controller.address}            \r\n              </Grid>\r\n            </Grid>\r\n          </div>          \r\n        </ExpansionPanelSummary>\r\n\r\n        <ExpansionPanelDetails style={{minHeight:\"450px\"}}>\r\n          <ExpansionPanelContent displayDetailsOrSetting={this.props.displayDetailsOrSetting} \r\n          handleClickDetailsOrSetting={this.props.handleClickDetailsOrSetting} controller={this.props.controller}/>\r\n        </ExpansionPanelDetails>        \r\n        \r\n      </ExpansionPanel>   \r\n      \r\n    \r\n  );\r\n}\r\n}\r\n\r\nexport default ControllerExpansionPanels","import React from 'react'\nimport ControllerExpansionPanels from './ControllerExpansionPanels'\n\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n\n        };\n    }     \n\n    renderItem(item) {\n        \n        const itemRows = [\t\t\t  \n                <ControllerExpansionPanels controller={item} expandedRow={this.props.expandedRow} \n                handleRowClick={this.props.handleRowClick} handleClickDetailsOrSetting={this.handleClickDetailsOrSetting}/> \n        ];\n        \n        return itemRows;    \n    }\n    \n    render() {\n        let allItemRows = [];\n        \n        this.props.rooms_status.controllers.forEach(item => {\n            const perItemRows = this.renderItem(item);\n            allItemRows = allItemRows.concat(perItemRows);\n        });\n        \n        return (         \n                <div style={{paddingBottom:\"650px\"}}>                \n\t\t\t        {allItemRows}                 \n                </div>\n        );\n    }\n}\n\n\n\n\nexport default Main","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nclass NextHoliday extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n          }    \r\n   \r\n    }  \r\n\r\n    componentDidMount() {\r\n        var today=new Date();\r\n        var apiKey=\"623928f68a0b62c099313091850fad51b0c7f84e\"\r\n        var country=\"hr\"\r\n        var year=today.getFullYear()\r\n        var nextYear=Number(today.getFullYear()+1)\r\n        var calendarificURL=\"https://calendarific.com/api/v2/holidays?&api_key=\"+apiKey+\"&country=\"+country+\"&year=\"+year\r\n        \r\n\r\n        fetch(calendarificURL)\r\n        .then(response => response.json())\r\n        .then((responseJson) => {\r\n            \r\n          this.setState({ holidayListJsonThisYear: responseJson.response.holidays })\r\n          this.getNextHoliday()          \r\n        })\r\n        .catch(console.log)\r\n\r\n        var calendarificURLNextYear=\"https://calendarific.com/api/v2/holidays?&api_key=\"+apiKey+\"&country=\"+country+\"&year=\"+nextYear\r\n\r\n        fetch(calendarificURLNextYear)\r\n        .then(response => response.json())\r\n        .then((responseJson) => {\r\n          this.setState({ holidayListJsonNextYear: responseJson.response.holidays })\r\n          this.getNextHoliday()\r\n        })\r\n        .catch(console.log)\r\n      }\r\n      \r\n    getNextHoliday=()=>{\r\n        var today=new Date()\r\n        \r\n        const thisYearHolidays=this.state.holidayListJsonThisYear\r\n        \r\n\r\n        \r\n        for (let i=0;i<thisYearHolidays.length;i++)\r\n        {\r\n            if  (thisYearHolidays[i].type[0]===\"National holiday\" || thisYearHolidays[i].type[0]===\"Observance\")\r\n            {\r\n                let currentHoliday=new Date(thisYearHolidays[i].date.datetime.year,thisYearHolidays[i].date.datetime.month-1,thisYearHolidays[i].date.datetime.day)\r\n                \r\n                if (today<currentHoliday )\r\n                {        \r\n                        this.setState({\r\n                            nextHoliday:thisYearHolidays[i]\r\n                             \r\n                        })                         \r\n                        \r\n                        break\r\n                }\r\n            } \r\n        }\r\n              \r\n        let lastHolidayIndex=Number(thisYearHolidays.length-1)       \r\n        \r\n        let lastHoliday=thisYearHolidays[lastHolidayIndex]\r\n        \r\n        let lastHolidayDate=new Date(lastHoliday.date.datetime.year,lastHoliday.date.datetime.month-1,lastHoliday.date.datetime.day)\r\n        const nextYearHolidays=this.state.holidayListJsonNextYear\r\n        if (today>=lastHolidayDate)\r\n        {\r\n            this.setState({\r\n                            nextHoliday:nextYearHolidays[0]\r\n                        })\r\n                       \r\n        }\r\n    }  \r\n\r\n       \r\n    render(){\r\n            \r\n        return(\r\n                \r\n    <div >\r\n        <Typography>\r\n        The next Croatian holiday is :<br/>\r\n        { this.state.nextHoliday &&\r\n                <div>{this.state.nextHoliday.name}<br/> {this.state.nextHoliday.date.iso}</div> \r\n        }\r\n        <br/>     \r\n        </Typography>\r\n         \r\n    </div>\r\n    )\r\n    }\r\n  }   \r\n\r\n\r\n\r\n\r\n  export default NextHoliday","import React from 'react'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\n\n\nfunction displayZoneList(props)\n{\n\n    const zoneList =props.rooms_status.controllers.map((controller) => {\n           \n        return (\n\n            \n                <ListItem alignItems=\"center\" button key={controller.id} onClick={() => props.handleRowLinkClick(controller.id)} style={props.expandedRow===controller.id?{background:\"lightblue\"}:{background:\"white\"}}>\n                    <ListItemText  primary={controller.zone}/>\n                    \n                </ListItem>  \n    )})\n\n    zoneList.unshift(<ListItem button key={\"home\"} onClick={() => props.handleRowLinkClick(\"home\")}>\n                        <ListItemIcon><HomeIcon /> </ListItemIcon>    \n                        <ListItemText >Home</ListItemText>            \n                    </ListItem>\n                    )    \n\n    return (<List display=\"flex\">                   \n        {zoneList}\n        </List>)\n\n}\n\n       \nexport default displayZoneList\n\n\n\n\n   \n\n  ","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AirQualityInfo from './AirQualityInfo';\r\nimport Main from './main';\r\nimport NextHoliday from './nextHoliday'\r\nimport DisplayZoneList from './displayZoneList';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  \r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function Layout(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={open?handleDrawerClose:handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open /*&& classes.hide*/)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"caption\" noWrap>\r\n            <AirQualityInfo />\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n       \r\n        <Divider />\r\n\r\n          <DisplayZoneList rooms_status={props.rooms_status} handleRowLinkClick={props.handleRowLinkClick} expandedRow={props.expandedRow} />\r\n        \r\n        <Divider />\r\n        <Typography variant=\"caption\" >\r\n          <NextHoliday/>\r\n        </Typography>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <Typography paragraph>\r\n\r\n          {JSON.parse(localStorage.getItem(\"currentTemperatureLocal\")) !==null?<Main rooms_status={props.rooms_status} \r\n          handleRowClick={props.handleRowClick} expandedRow={props.expandedRow}/>:null}\r\n          \r\n        </Typography>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react'\nimport Layout from './Layout'\n\nclass ParentComponent extends React.Component {\n\n    constructor(props){\n        super(props)        \n      \n        this.state = { \n          expandedRow : \"\",        \n                  \n          }      \n          \n    \n    }\n\n    \n    componentDidMount() {\n        var roomStatusUrl=\"https://ae.hr/rooms_status.php\"\n        \n       \n        fetch(roomStatusUrl)\n        .then(response => response.json())\n        .then((responseJson) => {\n                     \n          this.setState({ rooms_status: responseJson },()=>\n          {\n            {\n              if ((JSON.parse(localStorage.getItem(\"currentTemperatureLocal\"))) ===null )\n                {\n                  \n                  let currentTempByRoomIdLocal={}\n              \n                  this.state.rooms_status.controllers.forEach(element => {\n                    let controllerId=element.id\n                    let controllerTemp=element.properties[7].Value\n                    currentTempByRoomIdLocal[controllerId]=controllerTemp\n              \n                  })\n              \n                  localStorage.setItem(\"currentTemperatureLocal\", JSON.stringify(currentTempByRoomIdLocal));\n                  this.setState({localTempUpdated : true})\n                }  \n                  \n            }\n          })       \n              \n        })\n        .catch(console.log)  \n      }         \n      \n      \n      handleRowClick=(rowId)=> {\n        if (rowId===\"home\")\n        {\n          this.setState({expandedRow : \"\"})\n          window.scrollTo(0, 0)\n        }\n        \n        if (rowId!==this.state.expandedRow) {\n          this.setState({expandedRow : rowId})                    \n      }       \n        else\n        {\n            this.setState({expandedRow : \"\"})\n        }\n        \n    } \n      \n     \n    handleRowLinkClick=(rowId)=> {\n      if (rowId===\"home\")\n      {\n        this.setState({expandedRow : \"\"})\n        window.scrollTo(0, 0)\n      }\n\n\n      else if (rowId===this.state.expandedRow)\n      {\n        this.setState({expandedRow : \"\"})\n      }      \n      \n        \n      else if (this.state.expandedRow===\"\")\n        {              \n            var node = document.getElementById(\"row-\"+rowId)\n            var topBarHeight = 75;\n            \n            node.scrollIntoView(true);               \n            var scrolledY = window.scrollY;\n\n            if(scrolledY){\n                window.scrollTo({\n                top: scrolledY - topBarHeight,\n                left: 0,\n                behavior: 'smooth'\n              });\n            }            \n            setTimeout(() => \n            {{              \n                this.setState({expandedRow : rowId})                       \n\n            }}, 500)\n        }\n\n\n      else{\n      \n          this.setState({expandedRow : \"\"})\n\n          setTimeout(() => \n          {{\n              var node = document.getElementById(\"row-\"+rowId)\n              var topBarHeight = 75;\n              \n              node.scrollIntoView(true);               \n              var scrolledY = window.scrollY;\n\n              if(scrolledY){\n                window.scrollTo({                  \n                  top: scrolledY - topBarHeight,\n                  left: 0,\n                  behavior: 'smooth'\n                });\n              }\n          }}, 500);        \n          \n          \n          setTimeout(() => \n          {{\n              this.setState({expandedRow : rowId})\n          }}, 1000)};        \n        \n    }\n\n        \n    render() {\n        \n\n    return (\n      <div>\n        {this.state.rooms_status?\n        <Layout rooms_status={this.state.rooms_status} handleRowLinkClick={this.handleRowLinkClick}\n        handleRowClick={this.handleRowClick} expandedRow={this.state.expandedRow}\n        />:null }\n      </div>       \n        \n    )\n        \n  }\n}\n\n\n\nexport default ParentComponent","import React from 'react'\nimport ParentComponent from './ParentComponent'\n\n\n\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    \n    \n}\n    \n\n    render() {\n\n    return (\n    \n      <ParentComponent/> \n    \n    )\n        \n  }\n}\n\n\n  export default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app.js'\n\n\n\nReactDOM.render\n(\n    <App/>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}