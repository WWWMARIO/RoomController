{"version":3,"sources":["form.js","app.js","index.js"],"names":["QRCode","props","onClickGenerateQRCode","qrLink","item","name","setState","qrUrl","state","onClick","this","src","React","Component","controllerDetails","colSpan","id","address","object","subObject","zone","subZone","ipAddress","ipPort","String","LocalCommandHeatingCooling","LocalCommandPanelBlocked","ControllerProperties","changeCurrentTempFromLocalStorage","event","CurrentTempFromLocalStorage","JSON","parse","localStorage","getItem","target","value","Number","setItem","stringify","properties","Value","controllerSettings","settingsRows","settings","map","row","index","key","Id","settingName","settingValue","ParentComponent","handleClickDetailsOrSetting","displayDetailsOrSetting","displayDetailsAndPropertiesOrSettings","style","float","rooms_status","expandedRow","rowId","itemRows","backgroundColor","handleRowClick","push","allItemRows","controllers","forEach","perItemRows","renderItem","concat","TableHead","width","Form","App","currentTempByRoomIdLocal","element","controllerId","controllerTemp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8da2daab.chunk.js","sourcesContent":["import React from 'react'\r\nimport rooms_status from './rooms_status.json';\r\n\r\n\r\n\r\n\r\nclass QRCode extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {            \r\n            qrUrl: \"\"         \r\n          }    \r\n   \r\n    }\r\n\r\n    onClickGenerateQRCode=()=>\r\n    {       \r\n        let qrLink= \"https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=\"+this.props.item.name\r\n        this.setState({\r\n            qrUrl:qrLink\r\n        })        \r\n    }    \r\n\r\n        \r\n    render() {        \r\n\r\n    return (\r\n        <div>\r\n            <button onClick={this.onClickGenerateQRCode}>Generate QR Code</button><br></br>\r\n            {this.state.qrUrl!==\"\"?<img src={this.state.qrUrl}></img>:\"\"}\r\n        </div>\r\n\r\n    )\r\n        \r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst controllerDetails= item =>\r\n{\r\n    return(\r\n    <tbody>\r\n        <tr>\r\n            <td colSpan={3}><strong>Details:</strong></td>\r\n        </tr>\r\n        <tr>\r\n            <td>id :</td>\r\n            <td>{item.id}</td>\r\n        </tr>    \r\n        \r\n        <tr>\r\n            <td>name:</td>\r\n            <td>{item.name}</td>\r\n        </tr>         \r\n        <tr>\r\n            <td>address:</td>\r\n            <td>{item.address}</td>\r\n        </tr>         \r\n        <tr>\r\n            <td>object:</td>\r\n            <td>{item.object}</td>\r\n        </tr>         \r\n        <tr>\r\n            <td>subObject:</td>\r\n            <td>{item.subObject}</td>\r\n        </tr>         \r\n        <tr>\r\n            <td>zone:</td>\r\n            <td>{item.zone}</td>\r\n        </tr>         \r\n        <tr>\r\n            <td>subZone:</td>\r\n            <td>{item.subZone}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>ipAddress:</td>\r\n            <td>{item.ipAddress}</td>\r\n        </tr>         \r\n        <tr>\r\n            <td>ipPort:</td>\r\n            <td>{item.ipPort}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>LocalCommandHeatingCooling:</td>\r\n            <td>{String(item.LocalCommandHeatingCooling)}</td>\r\n        </tr>         \r\n        <tr>\r\n            <td>LocalCommandPanelBlocked:</td>\r\n            <td>{String(item.LocalCommandPanelBlocked)}</td>\r\n        </tr> \r\n    </tbody>   \r\n    )\r\n}\r\n\r\n\r\n\r\nclass ControllerProperties extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n\r\n        this.state = {       \r\n            CurrentTempFromLocalStorage:JSON.parse(localStorage.getItem(\"currentTempLocal\"))\r\n          }    \r\n   \r\n    }\r\n\r\n    changeCurrentTempFromLocalStorage=event=>\r\n    \r\n    {        \r\n        let CurrentTempFromLocalStorage=JSON.parse(localStorage.getItem(\"currentTempLocal\"))\r\n           \r\n        if (event.target.value==='+')\r\n        {\r\n            CurrentTempFromLocalStorage[this.props.item.id]=Number(CurrentTempFromLocalStorage[this.props.item.id])+1\r\n        }            \r\n        if (event.target.value==='-')\r\n        {\r\n            CurrentTempFromLocalStorage[this.props.item.id]=Number(CurrentTempFromLocalStorage[this.props.item.id])-1\r\n        }\r\n        localStorage.setItem(\"currentTempLocal\",JSON.stringify(CurrentTempFromLocalStorage))\r\n       \r\n        this.setState ({\r\n            CurrentTempFromLocalStorage:CurrentTempFromLocalStorage\r\n        })\r\n        \r\n    \r\n    }\r\n\r\n\r\n    render(){\r\n    \r\n        return(\r\n                \r\n    <tbody>\r\n        <tr>\r\n            <td colSpan={3}><strong>Details:</strong></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Set temperature:</td>\r\n            <td>{this.state.CurrentTempFromLocalStorage[this.props.item.id]}\r\n                <button value=\"+\" onClick={this.changeCurrentTempFromLocalStorage}>+</button>\r\n                <button value=\"-\" onClick={this.changeCurrentTempFromLocalStorage}>-</button>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>Current temperature:</td>\r\n            <td>{this.props.item.properties[8].Value}</td>\r\n        </tr>          \r\n        <tr>\r\n            <td>{this.props.item.properties[24].Value===\"1\"?<p>DND</p>:<p></p>}</td>            \r\n        </tr>\r\n        <tr>\r\n            <td>{this.props.item.properties[38].Value===\"1\"?<p>Occupied</p>:<p></p>} </td>            \r\n        </tr>        \r\n              \r\n\r\n    </tbody>    \r\n    )\r\n    }\r\n}\r\n\r\n\r\nconst controllerSettings= item =>\r\n{         \r\n        \r\n       \r\n        const settingsRows =item.settings.map((row,index) => {\r\n           \r\n            return (\r\n             \r\n                \r\n                <tr key={index}>                \r\n                    <td>{row.Id}</td>\r\n                    <td>{row.settingName}</td>\r\n                    <td>{row.settingValue}</td>\r\n                </tr>\r\n             \r\n            \r\n        )})\r\n        \r\n        return (\r\n\r\n                 <tbody>\r\n                     <tr>\r\n                        <td colSpan={3}><strong>Settings:</strong></td>\r\n                    </tr> \r\n                     {settingsRows}</tbody> \r\n                 \r\n    )\r\n}\r\n\r\n\r\n\r\nclass ParentComponent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        \r\n        this.state = {\r\n            rooms_status : rooms_status,\r\n            expandedRow : \"\",\r\n            displayDetailsOrSetting: 0,\r\n\r\n        };\r\n    }\r\n\r\n    handleRowClick(rowId) {\r\n        \r\n        if (rowId!==this.state.expandedRow)\r\n        {\r\n            this.setState({expandedRow : rowId})\r\n        }\r\n        else\r\n        {\r\n            this.setState({expandedRow : \"\"})\r\n        }\r\n        this.setState({displayDetailsOrSetting : 0})\r\n    }\r\n        \r\n    handleClickDetailsOrSetting=()=> {    \r\n        \r\n        if (this.state.displayDetailsOrSetting===0)\r\n        {\r\n            this.setState({displayDetailsOrSetting:1})\r\n        }\r\n        else\r\n        {\r\n            this.setState({displayDetailsOrSetting:0})\r\n        }\r\n        \r\n    }\r\n\r\n    displayDetailsAndPropertiesOrSettings=item=>{\r\n\r\n     if (this.state.displayDetailsOrSetting===0)\r\n        return(\r\n            <tr  key={\"row-expanded-\" + item.id}>\r\n                <td colSpan={3}>\r\n                        <div style={{float: \"left\"}} >\r\n                            {controllerDetails(item)}   \r\n                        </div>\r\n                        <div style={{float: \"left\"}}> \r\n                            <ControllerProperties item={item}/>\r\n                        </div>\r\n                </td>        \r\n            </tr>\r\n                \r\n        )\r\n    else\r\n    return(<tr>\r\n                <td colSpan={3}>\r\n                    <div style={{float: \"left\"} }>{controllerSettings(item)}</div>\r\n                    <div style={{float: \"left\"}}><QRCode item={item}/></div>\r\n                </td>\r\n            </tr>)\r\n\r\n    \r\n    \r\n    }\r\n\r\n    \r\n    renderItem(item) {\r\n        \r\n        const itemRows = [\r\n\t\t\t<tr  key={\"row-data-\" + item.id} style={{backgroundColor: \"lightblue\"}}>\r\n\t\t\t    <td><button onClick={() => this.handleRowClick(item.id)}>{item.zone}</button></td>\r\n\t\t\t    <td>{item.name}</td>\r\n\t\t\t    <td>{item.address}{this.state.expandedRow===item.id?<button onClick={()=>{this.handleClickDetailsOrSetting()}}>\r\n                    {this.state.displayDetailsOrSetting===0?\"Settings\":\"Details\"}</button>:\"\"}\r\n                </td>\t\r\n                \r\n                \r\n                \t\t\r\n\t\t\t</tr>\r\n        ];\r\n        \r\n        if(this.state.expandedRow===item.id) {\r\n            itemRows.push(                \r\n                this.displayDetailsAndPropertiesOrSettings(item) \r\n                               \r\n            );\r\n        }\r\n        \r\n        \r\n        return itemRows;    \r\n    }\r\n    \r\n    render() {\r\n        let allItemRows = [];\r\n        \r\n        this.state.rooms_status.controllers.forEach(item => {\r\n            const perItemRows = this.renderItem(item);\r\n            allItemRows = allItemRows.concat(perItemRows);\r\n        });\r\n        \r\n        return (\r\n\t\t\t     <tbody>{allItemRows}</tbody>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst TableHead= () =>\r\n{\r\n    return(        \r\n    <thead>\r\n        <tr>\r\n            <td style={{width:\"33.33%\"}}>Zone</td>\r\n            <td style={{width:\"33.33%\"}}>Name</td>\r\n            <td style={{width:\"33.33%\"}}>Address</td>\r\n        </tr>\r\n    </thead>\r\n    \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*class ControllerListTable extends React.Component {\r\n\r\n\r\n    \r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n    //varijabla za json dobiven sa web stranice\r\n    //const ControllerListFromAPI=getControllerListFromRoomStatus();\r\n\r\n        \r\n        const roomsStatus=rooms_status;\r\n        console.log(roomsStatus.controllers);\r\n\r\n        this.state = {\r\n            roomsStatus :rooms_status            \r\n        }\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        \r\n    //funkcija za dobivanje jsona sa web stranice\r\n    function getControllerListFromRoomStatus() {\r\n        return fetch('http://ae.hr/rooms_status.json')\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            console.log  (responseJson.movies)\r\n            return responseJson.movies;\r\n        })\r\n        .catch((error) => {\r\n            console.error(error);\r\n        });\r\n        }\r\n\r\n    return(\r\n    <tbody>\r\n        <button onClick={()=>this.props.getControllerListFromRoomStatus()}></button>      \r\n        \r\n    </tbody>\r\n\r\n    )\r\n\r\n    }\r\n}*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Form extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {          \r\n          }    \r\n   \r\n    }\r\n        \r\n    render() {\r\n        \r\n\r\n    return (\r\n    <table>\r\n        <TableHead/>\r\n        <ParentComponent controllerSettings={controllerSettings}/>\r\n\r\n        {/*<ControllerListTable getControllerListFromRoomStatus={getControllerListFromRoomStatus}/> */}       \r\n        \r\n    </table>\r\n    )\r\n        \r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Form","import React from 'react'\r\nimport Form from './form'\r\nimport rooms_status from './rooms_status.json';\r\n\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    \r\n    if ((JSON.parse(localStorage.getItem(\"currentTempLocal\"))) ===null )\r\n      {\r\n        \r\n        let currentTempByRoomIdLocal={}\r\n\r\n        rooms_status.controllers.forEach(element => {\r\n          let controllerId=element.id\r\n          let controllerTemp=element.properties[7].Value\r\n          currentTempByRoomIdLocal[controllerId]=controllerTemp\r\n\r\n        })\r\n\r\n        localStorage.setItem(\"currentTempLocal\", JSON.stringify(currentTempByRoomIdLocal));\r\n      }\r\n}\r\n\r\n    \r\n\r\n    render() {\r\n\r\n    return (\r\n    <Form/>    \r\n    )\r\n        \r\n  }\r\n}\r\n\r\n\r\n  export default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app'\r\nimport './index.css'\r\n\r\nReactDOM.render\r\n(\r\n    <App/>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}