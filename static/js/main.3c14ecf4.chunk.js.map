{"version":3,"sources":["topbar.js","qrcode.js","displayControllerSettings.js","displayControllerDetails.js","DisplayControllerProperties.js","expansionPanelContent.js","ControlledExpansionPanels.js","main.js","nextHoliday.js","displayZoneList.js","template.js","ParentComponent.js","app.js","index.js"],"names":["Topbar","props","displayAirQualityData","state","airQualityRijeka","measurements","map","parameter","index","style","display","padding","toUpperCase","value","unit","fetch","then","response","json","responseJson","setState","results","catch","console","log","this","React","Component","QRCode","onClickGenerateQRCode","qrLink","controller","name","qrUrl","onClick","src","alt","displayControllerSettings","item","settingsRows","settings","row","key","Id","settingName","settingValue","colSpan","displayControllerDetails","id","address","object","subObject","zone","subZone","ipAddress","ipPort","String","LocalCommandHeatingCooling","LocalCommandPanelBlocked","DisplayControllerProperties","changeCurrentTempFromLocalStorage","event","CurrentTempFromLocalStorage","JSON","parse","localStorage","getItem","target","Number","setItem","stringify","properties","Value","ExpansionPanelContent","float","paddingRight","minWidth","displayDetailsOrSetting","handleClickDetailsOrSetting","ControlledExpansionPanels","ExpansionPanel","expanded","expandedRow","ExpansionPanelSummary","backgroundColor","handleRowClick","expandIcon","aria-controls","ExpansionPanelDetails","minHeight","Main","currentTempByRoomIdLocal","rooms_status","controllers","forEach","element","controllerId","controllerTemp","allItemRows","perItemRows","renderItem","concat","paddingBottom","NextHoliday","getNextHoliday","today","Date","thisYearHolidays","holidayListJsonThisYear","i","length","type","date","datetime","year","month","day","nextHoliday","lastHoliday","lastHolidayDate","nextYearHolidays","holidayListJsonNextYear","apiKey","getFullYear","nextYear","holidays","Typography","iso","displayZoneList","zoneList","ListItem","alignItems","button","handleRowLinkClick","background","ListItemText","primary","unshift","ListItemIcon","List","useStyles","makeStyles","theme","root","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Template","classes","useTheme","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","edge","variant","noWrap","Drawer","anchor","paper","direction","Divider","paragraph","ParentComponent","rowId","window","scrollTo","setTimeout","document","getElementById","scrollIntoView","scrolledY","scrollY","top","left","behavior","rooms_status2","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.3c14ecf4.chunk.js","sourcesContent":["import React from 'react'\n\n\nclass Topbar extends React.Component {\n\n    constructor(props){\n        super(props)       \n            \n        this.state = {\n          }\n    }  \n    \n    componentDidMount() {\n        var country=\"HR\"\n        var location=\"HR0005A\"\n        \n        var openAqURL=\"https://api.openaq.org/v1/latest?&country=\"+country+\"&location=\"+location\n        //console.log(openAqURL)\n\n\n        fetch(openAqURL)\n        .then(response => response.json())\n        .then((responseJson) => {\n            \n          this.setState({ airQualityRijeka: responseJson.results[0] })         \n          this.displayAirQualityData()\n        })\n        .catch(console.log)  \n                \n      }\n\n\n    displayAirQualityData=()=>\n    { \n\n        const airQualityRijekaParameters =this.state.airQualityRijeka.measurements.map((parameter,index) => {\n           \n            return ( \n\n                <p style={{display : 'inline-block',padding:\"0 1em\" }} >\n                    {parameter.parameter.toUpperCase()} : {parameter.value}{parameter.unit}\n                </p>              \n        )})\n\n        return (airQualityRijekaParameters)\n    } \n  \n    render(){\n    \n        return(\n                \n    <div >\n         Air quality in Rijeka, latest measurements {this.state.airQualityRijeka && this.displayAirQualityData()}\n         \n         \n    </div>\n    )\n    }\n  }  \n\n\n  export default Topbar","import React from 'react'\n\n\nclass QRCode extends React.Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {            \n            qrUrl: \"\"         \n          }    \n   \n    }\n\n    onClickGenerateQRCode=()=>\n    {       \n        let qrLink= \"https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=\"+this.props.controller.name\n        this.setState({\n            qrUrl:qrLink\n        })        \n    }    \n\n        \n    render() {        \n\n    return (\n        <div>\n            <button onClick={this.onClickGenerateQRCode}>Generate QR Code</button><br></br>\n            {this.state.qrUrl!==\"\"?<img src={this.state.qrUrl} alt={\"qr kod replacement\"}></img>:\"\"}\n        </div>\n\n    )\n        \n  }\n}\n\n\nexport default QRCode","import React from 'react'\n\n\nconst displayControllerSettings= item =>\n{         \n        \n       \n        const settingsRows =item.settings.map((row,index) => {\n           \n            return (\n             \n                \n                <tr key={index}>                \n                    <td>{row.Id}</td>\n                    <td>{row.settingName}</td>\n                    <td>{row.settingValue}</td>\n                </tr>\n             \n            \n        )})\n        \n        return (\n\n                <tbody>\n                    <tr>\n                        <td colSpan={3}><strong>Settings:</strong></td>\n                    </tr> \n                     {settingsRows}\n                </tbody> \n                 \n    )\n}\n\nexport default displayControllerSettings","import React from 'react'\n\nconst displayControllerDetails= item =>\n{\n    return(\n    <tbody>\n        <tr>\n            <td colSpan={3}><strong>Details:</strong></td>\n        </tr>\n        <tr>\n            <td>id :</td>\n            <td>{item.id}</td>\n        </tr>    \n        \n        <tr>\n            <td>name:</td>\n            <td>{item.name}</td>\n        </tr>         \n        <tr>\n            <td>address:</td>\n            <td>{item.address}</td>\n        </tr>         \n        <tr>\n            <td>object:</td>\n            <td>{item.object}</td>\n        </tr>         \n        <tr>\n            <td>subObject:</td>\n            <td>{item.subObject}</td>\n        </tr>         \n        <tr>\n            <td>zone:</td>\n            <td>{item.zone}</td>\n        </tr>         \n        <tr>\n            <td>subZone:</td>\n            <td>{item.subZone}</td>\n        </tr>\n        <tr>\n            <td>ipAddress:</td>\n            <td>{item.ipAddress}</td>\n        </tr>         \n        <tr>\n            <td>ipPort:</td>\n            <td>{item.ipPort}</td>\n        </tr>\n        <tr>\n            <td>LocalCommandHeatingCooling:</td>\n            <td>{String(item.LocalCommandHeatingCooling)}</td>\n        </tr>         \n        <tr>\n            <td>LocalCommandPanelBlocked:</td>\n            <td>{String(item.LocalCommandPanelBlocked)}</td>\n        </tr> \n    </tbody>   \n    )\n}\n\n\nexport default displayControllerDetails","import React from 'react'\n\n\nclass DisplayControllerProperties extends React.Component {\n\n    constructor(props){\n        super(props)\n\n\n        this.state = {       \n            CurrentTempFromLocalStorage:JSON.parse(localStorage.getItem(\"currentTemperatureLocal\"))\n          }    \n   \n    }\n\n    /*componentDidMount() {  \n        \n        \n        this.setState({ CurrentTempFromLocalStorage:JSON.parse(localStorage.getItem(\"currentTemperatureLocal\")) })\n\n        if ((JSON.parse(localStorage.getItem(\"currentTemperatureLocal\"))) ===null )\n    {\n      \n      let currentTempByRoomIdLocal={}\n\n      this.props.rooms_status.controllers.forEach(element => {\n        let controllerId=element.id\n        let controllerTemp=element.properties[7].Value\n        currentTempByRoomIdLocal[controllerId]=controllerTemp\n\n      })\n\n      localStorage.setItem(\"currentTemperatureLocal\", JSON.stringify(currentTempByRoomIdLocal));\n    }  \n    //else \n    //this.setState({ CurrentTempFromLocalStorage:JSON.parse(localStorage.getItem(\"currentTemperatureLocal\")) })\n\n        \n      }*/\n\n          \n        \n        \n      \n\n\n\n\n\n\n\n\n    changeCurrentTempFromLocalStorage=event=>\n    \n    {        \n        let CurrentTempFromLocalStorage=JSON.parse(localStorage.getItem(\"currentTemperatureLocal\"))\n           \n        if (event.target.value==='+')\n        {\n            CurrentTempFromLocalStorage[this.props.item.id]=Number(CurrentTempFromLocalStorage[this.props.item.id])+1\n        }            \n        if (event.target.value==='-')\n        {\n            CurrentTempFromLocalStorage[this.props.item.id]=Number(CurrentTempFromLocalStorage[this.props.item.id])-1\n        }\n        localStorage.setItem(\"currentTemperatureLocal\",JSON.stringify(CurrentTempFromLocalStorage))\n       \n        this.setState ({\n            CurrentTempFromLocalStorage:CurrentTempFromLocalStorage\n        })\n        \n    \n    }\n\n\n    render(){\n    \n        return(\n                \n    <tbody>\n        <tr>\n            <td colSpan={3}><strong>Properties:</strong></td>\n        </tr>\n        <tr>\n            <td>Set temperature:</td>\n            <td>{this.state.CurrentTempFromLocalStorage[this.props.item.id]}\n                <button value=\"+\" onClick={this.changeCurrentTempFromLocalStorage}>+</button>\n                <button value=\"-\" onClick={this.changeCurrentTempFromLocalStorage}>-</button>\n            </td>\n        </tr>\n        <tr>\n            <td>Current temperature:</td>\n            <td>{this.props.item.properties[8].Value}</td>\n        </tr>          \n        <tr>\n            <td>{this.props.item.properties[24].Value===\"1\"?<p>DND</p>:<p></p>}</td>            \n        </tr>\n        <tr>\n            <td>{this.props.item.properties[38].Value===\"1\"?<p>Occupied</p>:<p></p>} </td>            \n        </tr>        \n              \n\n    </tbody>    \n    )\n    }\n}\n\n\nexport default DisplayControllerProperties","import React from 'react'\r\nimport QRCode from './qrcode.js'\r\nimport displayControllerSettings from './displayControllerSettings.js'\r\nimport displayControllerDetails from './displayControllerDetails.js'\r\nimport DisplayControllerProperties from './DisplayControllerProperties.js'\r\n\r\n\r\nclass ExpansionPanelContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        \r\n        this.state = {\r\n  \r\n        };\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n   render(){\r\n  \r\n   \r\n  \r\n    return (\r\n  \r\n        \r\n        <div >        \r\n                     \r\n            <tr  style={{ float: \"left\",paddingRight: \"50px\", minWidth:\"400px\"}} /*ClassName={clsx(classes.detailsColumn, classes.helper)}*/>\r\n              {/*<Typography variant=\"caption\">*/}\r\n                {this.props.displayDetailsOrSetting===1?displayControllerSettings(this.props.controller):displayControllerDetails(this.props.controller)} \r\n              {/*</Typography>*/}\r\n            </tr>\r\n            <div  style={{ float: \"left\",paddingRight: \"50px\"}} /*className={classes.detailsColumn}*/>\r\n                {this.props.displayDetailsOrSetting===1?<QRCode controller={this.props.controller}/>:<DisplayControllerProperties item={this.props.controller}/>} \r\n            </div>\r\n            <div style={{float: \"left\"}} >\r\n                <button onClick={this.props.handleClickDetailsOrSetting}>promjeni</button>\r\n            </div>\r\n\r\n        </div>     \r\n            \r\n            \r\n          \r\n        \r\n        \r\n      \r\n    );\r\n  }\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  export default ExpansionPanelContent","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport displayControllerSettings from './displayControllerSettings'\r\nimport displayControllerDetails from './displayControllerDetails.js'\r\nimport DisplayControllerProperties from './DisplayControllerProperties.js'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport clsx from 'clsx';\r\nimport QRCode from './qrcode.js'\r\nimport ExpansionPanelContent from './expansionPanelContent'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ControlledExpansionPanels extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      \r\n      \r\n      this.state = {\r\n          \r\n        \r\n        \r\n\r\n      };\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n render(){\r\n\r\n \r\n\r\n  return (\r\n\r\n      \r\n      <ExpansionPanel     id={\"row-\"+this.props.controller.id} expanded={this.props.expandedRow === this.props.controller.id} >\r\n        <ExpansionPanelSummary style={{backgroundColor: \"lightblue\"}} onClick={()=>this.props.handleRowClick(this.props.controller.id)}\r\n  expandIcon={<ExpandMoreIcon/> }\r\n          aria-controls=\"panel1bh-content\"\r\n                >\r\n          <div >            \r\n              Zone:{this.props.controller.zone}        \r\n            \r\n          </div>\r\n          <div>\r\n              {this.props.controller.name}\r\n          </div>\r\n          <div>            \r\n              Adress:{this.props.controller.address}            \r\n          </div>\r\n          \r\n        </ExpansionPanelSummary>\r\n\r\n        <ExpansionPanelDetails style={{minHeight:\"550px\"}}/*className={classes.details}*/>          \r\n                   \r\n          <ExpansionPanelContent displayDetailsOrSetting={this.props.displayDetailsOrSetting} \r\n          handleClickDetailsOrSetting={this.props.handleClickDetailsOrSetting} controller={this.props.controller}\r\n          />\r\n          \r\n          \r\n          \r\n        </ExpansionPanelDetails>\r\n        \r\n        \r\n      </ExpansionPanel> \r\n      \r\n      \r\n    \r\n  );\r\n}\r\n}\r\n\r\n\r\n\r\n\r\nexport default ControlledExpansionPanels","import React from 'react'\nimport QRCode from './qrcode.js'\nimport displayControllerSettings from './displayControllerSettings.js'\nimport displayControllerDetails from './displayControllerDetails.js'\nimport DisplayControllerProperties from './DisplayControllerProperties.js'\nimport ControlledExpansionPanels from './ControlledExpansionPanels'\n\n\n/*const TableHead= () =>\n{\n    return(        \n    <thead>\n        <tr>\n            <td style={{width:\"33.33%\"}}>Zone</td>\n            <td style={{width:\"33.33%\"}}>Name</td>\n            <td style={{width:\"33.33%\"}}>Address</td>\n        </tr>\n    </thead>\n    \n    )\n}*/\n\n\n\n\n\n\nclass Main extends React.Component {\n    constructor() {\n        super();\n        \n        this.state = {\n            \n            \n            displayDetailsOrSetting: 0,\n\n        };\n    }\n\n    componentDidMount() {        \n        \n\n        if ((JSON.parse(localStorage.getItem(\"currentTemperatureLocal\"))) ===null )\n    {\n      \n      let currentTempByRoomIdLocal={}\n\n      this.props.rooms_status.controllers.forEach(element => {\n        let controllerId=element.id\n        let controllerTemp=element.properties[7].Value\n        currentTempByRoomIdLocal[controllerId]=controllerTemp\n\n      })\n\n      localStorage.setItem(\"currentTemperatureLocal\", JSON.stringify(currentTempByRoomIdLocal));\n    }  \n            \n      }\n   \n        \n    handleClickDetailsOrSetting=()=> {    \n        console.log(\"click\")\n        \n        if (this.state.displayDetailsOrSetting===0)\n        {\n            this.setState({displayDetailsOrSetting:1})            \n        }\n        else\n        {\n            this.setState({displayDetailsOrSetting:0})\n        }\n        \n    }\n\n    /*displayDetailsAndPropertiesOrSettings=item=>{\n\n     if (this.state.displayDetailsOrSetting===0)\n        return(\n            <tr  key={\"row-expanded-\" + item.id}>\n                <td colSpan={3}>\n                        <div style={{float: \"left\",marginRight:\"100px\"}} >\n                            {displayControllerDetails(item)}   \n                        </div>\n                        <div style={{float: \"left\"}}> \n                            <DisplayControllerProperties item={item}/>\n                        </div>\n                </td>        \n            </tr>\n                \n        )\n    else\n    return(<tr>\n                <td colSpan={3}>\n                    <div style={{float: \"left\", marginRight:\"100px\"} }>{displayControllerSettings(item)}</div>\n                    <div style={{float: \"left\"}}><QRCode item={item}/></div>\n                </td>\n            </tr>)\n\n    \n    \n    }*/\n\n    \n    /*renderItem(item) {\n        \n        const itemRows = [\n\t\t\t<tr id={\"row-\"+item.id}  key={\"row-data-\" + item.id} style={{backgroundColor: \"lightblue\"}}>\n\t\t\t    <td   ><button   onClick={() => this.props.handleRowClick(item.id)}>{item.zone}</button></td>\n\t\t\t    <td >{item.name}</td>\n\t\t\t    <td>{item.address}{this.props.expandedRow===item.id?<button onClick={()=>{this.handleClickDetailsOrSetting()}}>\n                    {this.state.displayDetailsOrSetting===0?\"Settings\":\"Details\"}</button>:\"\"}\n                </td>\t\n                \n                \n                \t\t\n\t\t\t</tr>\n        ];\n        \n        if(this.props.expandedRow===item.id) {\n            itemRows.push(                \n                this.displayDetailsAndPropertiesOrSettings(item) \n                               \n            );\n        }\n        \n        \n        return itemRows;    \n    }*/\n\n    renderItem(item) {\n        \n        const itemRows = [\n\t\t\t  \n                <ControlledExpansionPanels controller={item} expandedRow={this.props.expandedRow} \n                handleRowClick={this.props.handleRowClick} displayDetailsOrSetting={this.state.displayDetailsOrSetting}\n                handleClickDetailsOrSetting={this.handleClickDetailsOrSetting}/>    \n            \n        ];       \n        \n        \n        \n        return itemRows;    \n    }\n\n\n\n\n    \n    render() {\n        let allItemRows = [];\n        \n        this.props.rooms_status.controllers.forEach(item => {\n            const perItemRows = this.renderItem(item);\n            allItemRows = allItemRows.concat(perItemRows);\n        });\n        \n        return (         \n                <div style={{paddingBottom:\"1000px\"}}>\n\n                {/*TableHead()*/} \n\t\t\t        {allItemRows}\n                 \n                </div>\n        );\n    }\n}\n\n\n\n\nexport default Main","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { typography } from '@material-ui/system';\r\n\r\n\r\nclass NextHoliday extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n          }    \r\n   \r\n    }  \r\n\r\n    componentDidMount() {\r\n        var today=new Date();\r\n        var apiKey=\"623928f68a0b62c099313091850fad51b0c7f84e\"\r\n        var country=\"hr\"\r\n        var year=today.getFullYear()\r\n        var nextYear=Number(today.getFullYear()+1)\r\n        var calendarificURL=\"https://calendarific.com/api/v2/holidays?&api_key=\"+apiKey+\"&country=\"+country+\"&year=\"+year\r\n        \r\n\r\n        fetch(calendarificURL)\r\n        .then(response => response.json())\r\n        .then((responseJson) => {\r\n            \r\n          this.setState({ holidayListJsonThisYear: responseJson.response.holidays })\r\n          this.getNextHoliday()          \r\n        })\r\n        .catch(console.log)\r\n\r\n        var calendarificURLNextYear=\"https://calendarific.com/api/v2/holidays?&api_key=\"+apiKey+\"&country=\"+country+\"&year=\"+nextYear\r\n\r\n        fetch(calendarificURLNextYear)\r\n        .then(response => response.json())\r\n        .then((responseJson) => {\r\n          this.setState({ holidayListJsonNextYear: responseJson.response.holidays })\r\n          this.getNextHoliday()\r\n        })\r\n        .catch(console.log)\r\n      }\r\n      \r\n    getNextHoliday=()=>{\r\n        var today=new Date()\r\n        \r\n        const thisYearHolidays=this.state.holidayListJsonThisYear\r\n        \r\n\r\n        \r\n        for (let i=0;i<thisYearHolidays.length;i++)\r\n        {\r\n            if  (thisYearHolidays[i].type[0]===\"National holiday\" || thisYearHolidays[i].type[0]===\"Observance\")\r\n            {\r\n                let currentHoliday=new Date(thisYearHolidays[i].date.datetime.year,thisYearHolidays[i].date.datetime.month-1,thisYearHolidays[i].date.datetime.day)\r\n                \r\n                if (today<currentHoliday )\r\n                {        \r\n                        this.setState({\r\n                            nextHoliday:thisYearHolidays[i]\r\n                             \r\n                        })                         \r\n                        \r\n                        break\r\n                }\r\n            } \r\n        }\r\n              \r\n        let lastHolidayIndex=Number(thisYearHolidays.length-1)       \r\n        \r\n        let lastHoliday=thisYearHolidays[lastHolidayIndex]\r\n        \r\n        let lastHolidayDate=new Date(lastHoliday.date.datetime.year,lastHoliday.date.datetime.month-1,lastHoliday.date.datetime.day)\r\n        const nextYearHolidays=this.state.holidayListJsonNextYear\r\n        if (today>=lastHolidayDate)\r\n        {\r\n            this.setState({\r\n                            nextHoliday:nextYearHolidays[0]\r\n                        })\r\n                       \r\n        }\r\n         \r\n       \r\n\r\n\r\n    }   \r\n\r\n       \r\n    render(){\r\n    \r\n        return(\r\n                \r\n    <div >\r\n        <Typography>\r\n        The next Croatian holiday is :<br/>\r\n        { this.state.nextHoliday &&\r\n                <div>{this.state.nextHoliday.name}<br/> {this.state.nextHoliday.date.iso}</div> \r\n        }\r\n        <br/>     \r\n        </Typography>\r\n         \r\n    </div>\r\n    )\r\n    }\r\n  }   \r\n\r\n\r\n\r\n\r\n  export default NextHoliday","import React from 'react'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\n\n\nfunction displayZoneList(props)\n{\n\n    const zoneList =props.rooms_status.controllers.map((controller) => {\n           \n        return (\n\n            \n                <ListItem alignItems=\"center\" button key={controller.id} onClick={() => props.handleRowLinkClick(controller.id)} style={props.expandedRow===controller.id?{background:\"lightblue\"}:{background:\"white\"}}>\n                    <ListItemText  primary={controller.zone}/>\n                    \n                </ListItem>  \n    )})\n\n    zoneList.unshift(<ListItem button key={\"home\"} onClick={() => props.handleRowLinkClick(\"home\")}>\n                        <ListItemIcon><HomeIcon /> </ListItemIcon>    \n                        <ListItemText >Home</ListItemText>            \n                    </ListItem>\n                    )    \n\n    return (<List display=\"flex\">                   \n        {zoneList}\n        </List>)\n\n}\n\n       \nexport default displayZoneList\n\n\n{/*<List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts','Inbox', 'Starred', 'Send email', 'Drafts','Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n          </List>*/}\n\n   \n\n  ","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Topbar from './topbar';\r\nimport Main from './main';\r\nimport NextHoliday from './nextHoliday'\r\nimport DisplayZoneList from './displayZoneList';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function Template(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"caption\" noWrap>\r\n            <Topbar/>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          Home\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <DisplayZoneList rooms_status={props.rooms_status} handleRowLinkClick={props.handleRowLinkClick} expandedRow={props.expandedRow} />\r\n        {/*<List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts','Inbox', 'Starred', 'Send email', 'Drafts','Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n          </List>*/}\r\n\r\n\r\n\r\n\r\n        <Divider />\r\n        <Typography variant=\"caption\" >\r\n          <NextHoliday/>\r\n        </Typography>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <Typography paragraph>\r\n          <Main rooms_status={props.rooms_status} handleRowClick={props.handleRowClick} expandedRow={props.expandedRow}/>\r\n        </Typography>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react'\n//import Topbar from './topbar.js'\n//import Sidebar from './sidebar.js'\n//import Main from './main.js'\nimport rooms_status2 from './rooms_status2'\nimport Template from './template'\n\n\n\n\n\n\n\nclass ParentComponent extends React.Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = { \n          expandedRow : \"\"\n                  \n          }          \n          \n    \n    }\n    \n    componentDidMount() {\n        /*var roomStatusUrl=\"https://ae.hr/rooms_status.php\"\n        \n       \n        fetch(roomStatusUrl)\n        .then(response => response.json())\n        .then((responseJson) => {*/\n                     \n          /*this.setState({ rooms_status: responseJson })   */       \n          this.setState({ rooms_status: rooms_status2 })       \n        /*})\n        .catch(console.log)*/        \n      }   \n\n      \n      \n      \n      handleRowClick=(rowId)=> {\n        if (rowId===\"home\")\n        {\n          this.setState({expandedRow : \"\"})\n          window.scrollTo(0, 0)\n        }\n        \n        if (rowId!==this.state.expandedRow) {\n          this.setState({expandedRow : rowId})                    \n      }       \n        else\n        {\n            this.setState({expandedRow : \"\"})\n        }\n        //this.setState({displayDetailsOrSetting : 0})\n        \n    } \n      \n     \n    handleRowLinkClick=(rowId)=> {\n      if (rowId===\"home\")\n      {\n        this.setState({expandedRow : \"\"})\n        window.scrollTo(0, 0)\n      }\n      \n      if (rowId!==this.state.expandedRow) {\n        \n        if (this.state.expandedRow===\"\")\n        {\n          setTimeout(() => \n        {{        \n\n          if (rowId!==\"home\")\n          {\n            var node = document.getElementById(\"row-\"+rowId)\n            var yourHeight = 75;\n            \n            node.scrollIntoView(true);               \n            var scrolledY = window.scrollY;\n\n            if(scrolledY){\n              window.scrollTo({\n                top: scrolledY - yourHeight,\n                left: 0,\n                behavior: 'smooth'\n              });\n            }\n          }\n\n        }}, 0);        \n        \n        \n        setTimeout(() => \n        {{\n          if (rowId!==\"home\")\n          {\n            this.setState({expandedRow : rowId})\n          }\n          /*else if (rowId!==\"\")\n          {\n            this.setState({expandedRow : \"\"})\n          }*/\n\n        }}, 500)\n\n        }\n\n\n        else{\n        \n        this.setState({expandedRow : \"\"})\n\n        setTimeout(() => \n        {{        \n\n          if (rowId!==\"home\")\n          {\n            var node = document.getElementById(\"row-\"+rowId)\n            var yourHeight = 75;\n            \n            node.scrollIntoView(true);               \n            var scrolledY = window.scrollY;\n\n            if(scrolledY){\n              window.scrollTo({\n                top: scrolledY - yourHeight,\n                left: 0,\n                behavior: 'smooth'\n              });\n            }\n          }\n\n        }}, 500);        \n        \n        \n        setTimeout(() => \n        {{\n          if (rowId!==\"home\")\n          {\n            this.setState({expandedRow : rowId})\n          }\n          /*else if (rowId!==\"\")\n          {\n            this.setState({expandedRow : \"\"})\n          }*/\n\n        }}, 1000)};\n    }\n\n    else\n      {\n          this.setState({expandedRow : \"\"})\n      }  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    /*handleRowLinkClick=(rowId)=> {\n        if (rowId===\"home\")\n        {\n          this.setState({expandedRow : \"\"})\n          window.scrollTo(0, 0)\n        }\n        \n        if (rowId!==this.state.expandedRow) {\n          //this.setState({expandedRow : rowId})\n\n          setTimeout(() => \n          {{\n            if (rowId!==\"home\")\n            {\n              var node = document.getElementById(\"row-\"+rowId)\n              var yourHeight = 80;\n              \n              node.scrollIntoView(true);               \n              var scrolledY = window.scrollY;\n\n              if(scrolledY){\n                window.scrollTo({\n                  top: scrolledY - yourHeight,\n                  left: 0,\n                  behavior: 'smooth'\n                });\n              }\n            }\n\n          }}, 1000);\n      }\n\n      else\n        {\n            this.setState({expandedRow : \"\"})\n        }*/\n\n\n        \n      \n      \n      \n      \n      \n      /*if (rowId!==this.state.expandedRow)\n        {\n            this.setState({expandedRow : rowId}/*,()  =>{\n              if (rowId!==\"home\")\n              {\n                var node = document.getElementById(\"row-\"+rowId)\n                var yourHeight = 80;\n                \n                node.scrollIntoView(true);               \n                var scrolledY = window.scrollY;\n\n                if(scrolledY){\n                  window.scrollTo(0, scrolledY - yourHeight);\n                }\n                \n                \n                \n\n\n              }\n\n            } )\n        }\n        else\n        {\n            this.setState({expandedRow : \"\"})\n        }\n        //this.setState({displayDetailsOrSetting : 0})*/\n        \n    }\n\n        \n    render() {\n        \n\n    return (\n      <div>\n        {this.state.rooms_status?\n        <Template rooms_status={this.state.rooms_status} handleRowLinkClick={this.handleRowLinkClick}\n        handleRowClick={this.handleRowClick} expandedRow={this.state.expandedRow}\n        />:null }\n      </div>\n        \n        /*<div>\n            \n          <Topbar/>\n        {this.state.rooms_status?<Sidebar  expandedRow={this.state.expandedRow} rooms_status={this.state.rooms_status} handleRowLinkClick={this.handleRowLinkClick} />:null }  \n        {this.state.rooms_status?<Main rooms_status={this.state.rooms_status} handleRowClick={this.handleRowClick} expandedRow={this.state.expandedRow}/>:null }\n        </div>}*/\n    )\n        \n  }\n}\n\n\n\nexport default ParentComponent","import React from 'react'\nimport ParentComponent from './ParentComponent'\n\n\n\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    \n    \n}\n    \n\n    render() {\n\n    return (\n    \n      <ParentComponent/> \n    \n    )\n        \n  }\n}\n\n\n  export default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app.js'\n\n//import './index.css'\n\nReactDOM.render\n(\n    <App/>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}