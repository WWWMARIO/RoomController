{"version":3,"sources":["topbar.js","sidebar.js","qrcode.js","displayControllerSettings.js","displayControllerDetails.js","DisplayControllerProperties.js","main.js","ParentComponent.js","app.js","index.js"],"names":["Topbar","props","displayAirQualityData","state","airQualityRijeka","measurements","map","parameter","index","style","display","padding","toUpperCase","value","unit","fetch","then","response","json","responseJson","setState","results","catch","console","log","className","this","React","Component","Sidebar","getNextHoliday","today","Date","thisYearHolidays","holidayListJsonThisYear","i","length","type","date","datetime","year","month","day","nextHoliday","lastHoliday","Number","lastHolidayDate","nextYearHolidays","holidayListJsonNextYear","displayZoneList","zoneList","rooms_status","controllers","controller","key","id","expandedRow","background","borderStyle","onClick","handleRowClick","zone","unshift","apiKey","getFullYear","nextYear","holidays","name","iso","QRCode","onClickGenerateQRCode","qrLink","item","qrUrl","src","alt","displayControllerSettings","settingsRows","settings","row","Id","settingName","settingValue","colSpan","displayControllerDetails","address","object","subObject","subZone","ipAddress","ipPort","String","LocalCommandHeatingCooling","LocalCommandPanelBlocked","DisplayControllerProperties","changeCurrentTempFromLocalStorage","event","CurrentTempFromLocalStorage","JSON","parse","localStorage","getItem","target","setItem","stringify","properties","Value","Main","handleClickDetailsOrSetting","displayDetailsOrSetting","displayDetailsAndPropertiesOrSettings","float","marginRight","currentTempByRoomIdLocal","forEach","element","controllerId","controllerTemp","itemRows","backgroundColor","push","allItemRows","perItemRows","renderItem","concat","width","ParentComponent","rowId","window","scrollTo","document","getElementById","scrollIntoView","scrolledY","scrollY","scroll","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.ca183caa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nclass Topbar extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)       \r\n            \r\n        this.state = {\r\n          }\r\n    }  \r\n    \r\n    componentDidMount() {\r\n        var country=\"HR\"\r\n        var location=\"HR0005A\"\r\n        \r\n        var openAqURL=\"https://api.openaq.org/v1/latest?&country=\"+country+\"&location=\"+location\r\n        //console.log(openAqURL)\r\n\r\n\r\n        fetch(openAqURL)\r\n        .then(response => response.json())\r\n        .then((responseJson) => {\r\n            \r\n          this.setState({ airQualityRijeka: responseJson.results[0] })         \r\n          this.displayAirQualityData()\r\n        })\r\n        .catch(console.log)  \r\n                \r\n      }\r\n\r\n\r\n    displayAirQualityData=()=>\r\n    { \r\n\r\n        const airQualityRijekaParameters =this.state.airQualityRijeka.measurements.map((parameter,index) => {\r\n           \r\n            return ( \r\n\r\n                <p style={{display : 'inline-block',padding:\"0 1em\" }} >\r\n                    {parameter.parameter.toUpperCase()} : {parameter.value}{parameter.unit}\r\n                </p>              \r\n        )})\r\n\r\n        return (airQualityRijekaParameters)\r\n    } \r\n  \r\n    render(){\r\n    \r\n        return(\r\n                \r\n    <div className=\"topbar\">\r\n         Air quality in Rijeka, latest measurements {this.state.airQualityRijeka && this.displayAirQualityData()}\r\n         \r\n         \r\n    </div>\r\n    )\r\n    }\r\n  }  \r\n\r\n\r\n  export default Topbar","import React from 'react'\r\n\r\n\r\nclass Sidebar extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n          }    \r\n   \r\n    }  \r\n\r\n    componentDidMount() {\r\n        var today=new Date();\r\n        var apiKey=\"a33fb383ebe0e89522a090641a79bd07337ba94b\"\r\n        var country=\"hr\"\r\n        var year=today.getFullYear()\r\n        var nextYear=Number(today.getFullYear()+1)\r\n        var calendarificURL=\"https://calendarific.com/api/v2/holidays?&api_key=\"+apiKey+\"&country=\"+country+\"&year=\"+year\r\n        \r\n\r\n        fetch(calendarificURL)\r\n        .then(response => response.json())\r\n        .then((responseJson) => {\r\n            \r\n          this.setState({ holidayListJsonThisYear: responseJson.response.holidays })\r\n          this.getNextHoliday()          \r\n        })\r\n        .catch(console.log)\r\n\r\n        var calendarificURLNextYear=\"https://calendarific.com/api/v2/holidays?&api_key=\"+apiKey+\"&country=\"+country+\"&year=\"+nextYear\r\n\r\n        fetch(calendarificURLNextYear)\r\n        .then(response => response.json())\r\n        .then((responseJson) => {\r\n          this.setState({ holidayListJsonNextYear: responseJson.response.holidays })\r\n          this.getNextHoliday()\r\n        })\r\n        .catch(console.log)\r\n      }\r\n      \r\n    getNextHoliday=()=>{\r\n        var today=new Date()\r\n        \r\n        const thisYearHolidays=this.state.holidayListJsonThisYear\r\n        \r\n\r\n        \r\n        for (let i=0;i<thisYearHolidays.length;i++)\r\n        {\r\n            if  (thisYearHolidays[i].type[0]===\"National holiday\" || thisYearHolidays[i].type[0]===\"Observance\")\r\n            {\r\n                let currentHoliday=new Date(thisYearHolidays[i].date.datetime.year,thisYearHolidays[i].date.datetime.month-1,thisYearHolidays[i].date.datetime.day)\r\n                \r\n                if (today<currentHoliday )\r\n                {        \r\n                        this.setState({\r\n                            nextHoliday:thisYearHolidays[i]\r\n                             \r\n                        })                         \r\n                        \r\n                        break\r\n                }\r\n            } \r\n        }\r\n              \r\n        let lastHolidayIndex=Number(thisYearHolidays.length-1)       \r\n        \r\n        let lastHoliday=thisYearHolidays[lastHolidayIndex]\r\n        \r\n        let lastHolidayDate=new Date(lastHoliday.date.datetime.year,lastHoliday.date.datetime.month-1,lastHoliday.date.datetime.day)\r\n        const nextYearHolidays=this.state.holidayListJsonNextYear\r\n        if (today>=lastHolidayDate)\r\n        {\r\n            this.setState({\r\n                            nextHoliday:nextYearHolidays[0]\r\n                        })\r\n                       \r\n        }\r\n         \r\n       \r\n\r\n\r\n    }\r\n    displayZoneList=()=>\r\n    { \r\n\r\n        const zoneList =this.props.rooms_status.controllers.map((controller) => {\r\n           \r\n            return (\r\n\r\n                \r\n                    <tr key={controller.id} style={this.props.expandedRow===controller.id?{background:\"lightblue\",borderStyle: \"solid\"}:{background:\"white\"}}>\r\n                        <td  onClick={() => this.props.handleRowClick(controller.id)} >\r\n                        {controller.zone}\r\n                        </td>\r\n                    </tr>  \r\n        )})\r\n\r\n        zoneList.unshift(<tr key={\"home\"}>\r\n                            <td onClick={() => this.props.handleRowClick(\"home\")}>Home</td>            \r\n                        </tr>\r\n                        )\r\n\r\n        \r\n\r\n        return (<table>\r\n                        \r\n            {zoneList}\r\n            </table>)\r\n    }\r\n\r\n\r\n\r\n       \r\n    render(){\r\n    \r\n        return(\r\n                \r\n    <div className=\"sidenav\"> \r\n        {this.displayZoneList()}\r\n\r\n\r\n         <div>The next Croatian holiday is :</div>\r\n        { this.state.nextHoliday &&\r\n                <div>{this.state.nextHoliday.name} {this.state.nextHoliday.date.iso}</div> \r\n        }\r\n         \r\n         \r\n    </div>\r\n    )\r\n    }\r\n  }   \r\n\r\n  \r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    \r\n       \r\n   /* render(){\r\n    \r\n        return(\r\n                \r\n    <div className=\"sidenav\"> \r\n        \r\n         \r\n         \r\n    </div>\r\n    )\r\n    }\r\n  }*/\r\n\r\n\r\n\r\n\r\n  export default Sidebar","import React from 'react'\r\n\r\n\r\nclass QRCode extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {            \r\n            qrUrl: \"\"         \r\n          }    \r\n   \r\n    }\r\n\r\n    onClickGenerateQRCode=()=>\r\n    {       \r\n        let qrLink= \"https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=\"+this.props.item.name\r\n        this.setState({\r\n            qrUrl:qrLink\r\n        })        \r\n    }    \r\n\r\n        \r\n    render() {        \r\n\r\n    return (\r\n        <div>\r\n            <button onClick={this.onClickGenerateQRCode}>Generate QR Code</button><br></br>\r\n            {this.state.qrUrl!==\"\"?<img src={this.state.qrUrl} alt={\"qr kod replacement\"}></img>:\"\"}\r\n        </div>\r\n\r\n    )\r\n        \r\n  }\r\n}\r\n\r\n\r\nexport default QRCode","import React from 'react'\r\n\r\n\r\nconst displayControllerSettings= item =>\r\n{         \r\n        \r\n       \r\n        const settingsRows =item.settings.map((row,index) => {\r\n           \r\n            return (\r\n             \r\n                \r\n                <tr key={index}>                \r\n                    <td>{row.Id}</td>\r\n                    <td>{row.settingName}</td>\r\n                    <td>{row.settingValue}</td>\r\n                </tr>\r\n             \r\n            \r\n        )})\r\n        \r\n        return (\r\n\r\n                <tbody>\r\n                    <tr>\r\n                        <td colSpan={3}><strong>Settings:</strong></td>\r\n                    </tr> \r\n                     {settingsRows}\r\n                </tbody> \r\n                 \r\n    )\r\n}\r\n\r\nexport default displayControllerSettings","import React from 'react'\r\n\r\nconst displayControllerDetails= item =>\r\n{\r\n    return(\r\n    <tbody>\r\n        <tr>\r\n            <td colSpan={3}><strong>Details:</strong></td>\r\n        </tr>\r\n        <tr>\r\n            <td>id :</td>\r\n            <td>{item.id}</td>\r\n        </tr>    \r\n        \r\n        <tr>\r\n            <td>name:</td>\r\n            <td>{item.name}</td>\r\n        </tr>         \r\n        <tr>\r\n            <td>address:</td>\r\n            <td>{item.address}</td>\r\n        </tr>         \r\n        <tr>\r\n            <td>object:</td>\r\n            <td>{item.object}</td>\r\n        </tr>         \r\n        <tr>\r\n            <td>subObject:</td>\r\n            <td>{item.subObject}</td>\r\n        </tr>         \r\n        <tr>\r\n            <td>zone:</td>\r\n            <td>{item.zone}</td>\r\n        </tr>         \r\n        <tr>\r\n            <td>subZone:</td>\r\n            <td>{item.subZone}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>ipAddress:</td>\r\n            <td>{item.ipAddress}</td>\r\n        </tr>         \r\n        <tr>\r\n            <td>ipPort:</td>\r\n            <td>{item.ipPort}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>LocalCommandHeatingCooling:</td>\r\n            <td>{String(item.LocalCommandHeatingCooling)}</td>\r\n        </tr>         \r\n        <tr>\r\n            <td>LocalCommandPanelBlocked:</td>\r\n            <td>{String(item.LocalCommandPanelBlocked)}</td>\r\n        </tr> \r\n    </tbody>   \r\n    )\r\n}\r\n\r\n\r\nexport default displayControllerDetails","import React from 'react'\r\n\r\n\r\nclass DisplayControllerProperties extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n\r\n        this.state = {       \r\n            CurrentTempFromLocalStorage:JSON.parse(localStorage.getItem(\"currentTemperatureLocal\"))\r\n          }    \r\n   \r\n    }\r\n\r\n    /*componentDidMount() {  \r\n        \r\n        \r\n        this.setState({ CurrentTempFromLocalStorage:JSON.parse(localStorage.getItem(\"currentTemperatureLocal\")) })\r\n\r\n        if ((JSON.parse(localStorage.getItem(\"currentTemperatureLocal\"))) ===null )\r\n    {\r\n      \r\n      let currentTempByRoomIdLocal={}\r\n\r\n      this.props.rooms_status.controllers.forEach(element => {\r\n        let controllerId=element.id\r\n        let controllerTemp=element.properties[7].Value\r\n        currentTempByRoomIdLocal[controllerId]=controllerTemp\r\n\r\n      })\r\n\r\n      localStorage.setItem(\"currentTemperatureLocal\", JSON.stringify(currentTempByRoomIdLocal));\r\n    }  \r\n    //else \r\n    //this.setState({ CurrentTempFromLocalStorage:JSON.parse(localStorage.getItem(\"currentTemperatureLocal\")) })\r\n\r\n        \r\n      }*/\r\n\r\n          \r\n        \r\n        \r\n      \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    changeCurrentTempFromLocalStorage=event=>\r\n    \r\n    {        \r\n        let CurrentTempFromLocalStorage=JSON.parse(localStorage.getItem(\"currentTemperatureLocal\"))\r\n           \r\n        if (event.target.value==='+')\r\n        {\r\n            CurrentTempFromLocalStorage[this.props.item.id]=Number(CurrentTempFromLocalStorage[this.props.item.id])+1\r\n        }            \r\n        if (event.target.value==='-')\r\n        {\r\n            CurrentTempFromLocalStorage[this.props.item.id]=Number(CurrentTempFromLocalStorage[this.props.item.id])-1\r\n        }\r\n        localStorage.setItem(\"currentTemperatureLocal\",JSON.stringify(CurrentTempFromLocalStorage))\r\n       \r\n        this.setState ({\r\n            CurrentTempFromLocalStorage:CurrentTempFromLocalStorage\r\n        })\r\n        \r\n    \r\n    }\r\n\r\n\r\n    render(){\r\n    \r\n        return(\r\n                \r\n    <tbody>\r\n        <tr>\r\n            <td colSpan={3}><strong>Properties:</strong></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Set temperature:</td>\r\n            <td>{this.state.CurrentTempFromLocalStorage[this.props.item.id]}\r\n                <button value=\"+\" onClick={this.changeCurrentTempFromLocalStorage}>+</button>\r\n                <button value=\"-\" onClick={this.changeCurrentTempFromLocalStorage}>-</button>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>Current temperature:</td>\r\n            <td>{this.props.item.properties[8].Value}</td>\r\n        </tr>          \r\n        <tr>\r\n            <td>{this.props.item.properties[24].Value===\"1\"?<p>DND</p>:<p></p>}</td>            \r\n        </tr>\r\n        <tr>\r\n            <td>{this.props.item.properties[38].Value===\"1\"?<p>Occupied</p>:<p></p>} </td>            \r\n        </tr>        \r\n              \r\n\r\n    </tbody>    \r\n    )\r\n    }\r\n}\r\n\r\n\r\nexport default DisplayControllerProperties","import React from 'react'\r\nimport QRCode from './qrcode.js'\r\nimport displayControllerSettings from './displayControllerSettings.js'\r\nimport displayControllerDetails from './displayControllerDetails.js'\r\nimport DisplayControllerProperties from './DisplayControllerProperties.js'\r\n\r\n\r\nconst TableHead= () =>\r\n{\r\n    return(        \r\n    <thead>\r\n        <tr>\r\n            <td style={{width:\"33.33%\"}}>Zone</td>\r\n            <td style={{width:\"33.33%\"}}>Name</td>\r\n            <td style={{width:\"33.33%\"}}>Address</td>\r\n        </tr>\r\n    </thead>\r\n    \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Main extends React.Component {\r\n    constructor() {\r\n        super();\r\n        \r\n        this.state = {\r\n            \r\n            \r\n            displayDetailsOrSetting: 0,\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {        \r\n        \r\n\r\n        if ((JSON.parse(localStorage.getItem(\"currentTemperatureLocal\"))) ===null )\r\n    {\r\n      \r\n      let currentTempByRoomIdLocal={}\r\n\r\n      this.props.rooms_status.controllers.forEach(element => {\r\n        let controllerId=element.id\r\n        let controllerTemp=element.properties[7].Value\r\n        currentTempByRoomIdLocal[controllerId]=controllerTemp\r\n\r\n      })\r\n\r\n      localStorage.setItem(\"currentTemperatureLocal\", JSON.stringify(currentTempByRoomIdLocal));\r\n    }  \r\n            \r\n      }\r\n   \r\n        \r\n    handleClickDetailsOrSetting=()=> {    \r\n        \r\n        if (this.state.displayDetailsOrSetting===0)\r\n        {\r\n            this.setState({displayDetailsOrSetting:1})\r\n        }\r\n        else\r\n        {\r\n            this.setState({displayDetailsOrSetting:0})\r\n        }\r\n        \r\n    }\r\n\r\n    displayDetailsAndPropertiesOrSettings=item=>{\r\n\r\n     if (this.state.displayDetailsOrSetting===0)\r\n        return(\r\n            <tr  key={\"row-expanded-\" + item.id}>\r\n                <td colSpan={3}>\r\n                        <div style={{float: \"left\",marginRight:\"100px\"}} >\r\n                            {displayControllerDetails(item)}   \r\n                        </div>\r\n                        <div style={{float: \"left\"}}> \r\n                            <DisplayControllerProperties item={item}/>\r\n                        </div>\r\n                </td>        \r\n            </tr>\r\n                \r\n        )\r\n    else\r\n    return(<tr>\r\n                <td colSpan={3}>\r\n                    <div style={{float: \"left\", marginRight:\"100px\"} }>{displayControllerSettings(item)}</div>\r\n                    <div style={{float: \"left\"}}><QRCode item={item}/></div>\r\n                </td>\r\n            </tr>)\r\n\r\n    \r\n    \r\n    }\r\n\r\n    \r\n    renderItem(item) {\r\n        \r\n        const itemRows = [\r\n\t\t\t<tr id={\"row-\"+item.id}  key={\"row-data-\" + item.id} style={{backgroundColor: \"lightblue\"}}>\r\n\t\t\t    <td   ><button   onClick={() => this.props.handleRowClick(item.id)}>{item.zone}</button></td>\r\n\t\t\t    <td >{item.name}</td>\r\n\t\t\t    <td>{item.address}{this.props.expandedRow===item.id?<button onClick={()=>{this.handleClickDetailsOrSetting()}}>\r\n                    {this.state.displayDetailsOrSetting===0?\"Settings\":\"Details\"}</button>:\"\"}\r\n                </td>\t\r\n                \r\n                \r\n                \t\t\r\n\t\t\t</tr>\r\n        ];\r\n        \r\n        if(this.props.expandedRow===item.id) {\r\n            itemRows.push(                \r\n                this.displayDetailsAndPropertiesOrSettings(item) \r\n                               \r\n            );\r\n        }\r\n        \r\n        \r\n        return itemRows;    \r\n    }\r\n    \r\n    render() {\r\n        let allItemRows = [];\r\n        \r\n        this.props.rooms_status.controllers.forEach(item => {\r\n            const perItemRows = this.renderItem(item);\r\n            allItemRows = allItemRows.concat(perItemRows);\r\n        });\r\n        \r\n        return (         \r\n                <table className=\"main\">\r\n\r\n                    {TableHead()} \r\n\t\t\t        <tbody>{allItemRows}</tbody>\r\n                 \r\n                </table>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Main","import React from 'react'\r\nimport Topbar from './topbar.js'\r\nimport Sidebar from './sidebar.js'\r\nimport Main from './main.js'\r\n\r\n\r\n\r\n\r\n\r\nclass ParentComponent extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = { \r\n          expandedRow : \"\"\r\n                  \r\n          }          \r\n          \r\n    \r\n    }\r\n    \r\n    componentDidMount() {\r\n        var roomStatusUrl=\"https://ae.hr/rooms_status.php\"\r\n        \r\n       \r\n        fetch(roomStatusUrl)\r\n        .then(response => response.json())\r\n        .then((responseJson) => {\r\n                     \r\n          this.setState({ rooms_status: responseJson })          \r\n                  \r\n        })\r\n        .catch(console.log)        \r\n      }   \r\n\r\n      handleRowClick=(rowId)=> { \r\n        \r\n        \r\n        \r\n        \r\n        if (rowId===\"home\")\r\n        {\r\n          this.setState({expandedRow : \"\"})\r\n          window.scrollTo(0, 0)\r\n        }\r\n        \r\n        \r\n        if (rowId!==this.state.expandedRow)\r\n        {\r\n            this.setState({expandedRow : rowId},()  =>{\r\n              if (rowId!==\"home\")\r\n              {\r\n                var node = document.getElementById(\"row-\"+rowId)\r\n                var yourHeight = 80;\r\n                \r\n                node.scrollIntoView(true);               \r\n                var scrolledY = window.scrollY;\r\n\r\n                if(scrolledY){\r\n                  window.scroll(0, scrolledY - yourHeight);\r\n                }\r\n                \r\n                \r\n                \r\n\r\n\r\n              }\r\n\r\n            } )\r\n        }\r\n        else\r\n        {\r\n            this.setState({expandedRow : \"\"})\r\n        }\r\n        this.setState({displayDetailsOrSetting : 0})\r\n        \r\n    }\r\n\r\n        \r\n    render() {\r\n        \r\n\r\n    return (\r\n        <div>\r\n            \r\n            <Topbar/>\r\n        {this.state.rooms_status?<Sidebar  expandedRow={this.state.expandedRow} rooms_status={this.state.rooms_status} handleRowClick={this.handleRowClick} />:null }  \r\n        {this.state.rooms_status?<Main rooms_status={this.state.rooms_status} handleRowClick={this.handleRowClick} expandedRow={this.state.expandedRow}/>:null }\r\n        </div>\r\n    )\r\n        \r\n  }\r\n}\r\n\r\n\r\n\r\nexport default ParentComponent","import React from 'react'\r\nimport ParentComponent from './ParentComponent'\r\n\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    \r\n    \r\n}\r\n    \r\n\r\n    render() {\r\n\r\n    return (\r\n    \r\n      <ParentComponent/> \r\n    \r\n    )\r\n        \r\n  }\r\n}\r\n\r\n\r\n  export default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app'\r\nimport './index.css'\r\n\r\nReactDOM.render\r\n(\r\n    <App/>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}